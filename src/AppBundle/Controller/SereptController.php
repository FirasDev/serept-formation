<?php
/**
 * Created by PhpStorm.
 * User: Firas
 * Date: 2/26/2018
 * Time: 03:52 PM
 */

namespace AppBundle\Controller;

use AppBundle\Entity\About;
use AppBundle\Entity\Content;
use AppBundle\Entity\Evaluation;
use AppBundle\Entity\Formation;
use AppBundle\Entity\Questions;
use AppBundle\Entity\Session;
use AppBundle\Form\AboutType;
use AppBundle\Form\SessionType;
use Sensio\Bundle\FrameworkExtraBundle\Configuration\Route;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\HttpFoundation\Request;
use Symfony\Component\Form\FormBuilderInterface;
use Symfony\Component\HttpFoundation\File\UploadedFile;

class SereptController extends Controller
{
    private $current_adding_form;
    //This method displays training sessions a user is able to take


    /**
     * @Route("/forms", name="formsavailable")
     */
    public function formstartAction(Request $request)
    {
        $em = $this->getDoctrine()->getManager();
        $formation = $em->getRepository('AppBundle:Formation')->getUndoneForms($this->getUser()->getId());
        $paginator = $this->get('knp_paginator');
dump($formation);
        $pagination = $paginator->paginate($formation, $request->get('page', 1), 6);
        return $this->render('Member/forms_available.html.twig', array('pagination' => $pagination));
    }

    private function generateUniqueFileName()
    {
        // md5() reduces the similarity of the file names generated by
        // uniqid(), which is based on timestamps
        return md5(uniqid());
    }

    //In this method a supervisor can add a Training session
    /**
     * @Route("/forms/add", name="addform")
     */
    public function addFromAction(Request $request)
    {
        $formation = new Formation();
        $form = $this->createForm("AppBundle\Form\FormationType", $formation, array(
            'user' => $this->getUser()
        ));
        $form->handleRequest($request);
        if ($form->isSubmitted()) {
            $em = $this->getDoctrine()->getManager();
            /** @var UploadedFile $file */
            $file = $formation->getMainimage();
            $fileName = $this->generateUniqueFileName() . '.' . $file->guessExtension();
            $file->move(
                $this->getParameter('images_directory'),
                $fileName
            );
            $formation->setMainimage($fileName);
            $em->persist($formation);
            $em->flush();
            return $this->redirectToRoute('addcontent', array('formid' => $formation->getFormId()));
        }
        return $this->render(':Supervisor:form_add.html.twig', array('form' => $form->createView()));
    }

    //In this method a supervisor can add courses for his training session

    /**
     * @Route("/content//{formid}/add", name="addcontent",defaults={"formid" = -1})
     */
    public function addcontentAction(Request $request, $formid)
    {
        $content = new Content();

        $form = $this->createForm("AppBundle\Form\ContentType", $content, array(
            'user' => $this->getUser()
        ));
        $form->handleRequest($request);
        if ($form->isSubmitted()) {
            $em = $this->getDoctrine()->getManager();
            /** @var UploadedFile $file */
            $file = $content->getImgT();
            $fileName = $this->generateUniqueFileName() . '.' . $file->guessExtension();
            $file->move(
                $this->getParameter('images_directory'),
                $fileName
            );
            $content->setImgT($fileName);
            $em->persist($content);
            $em->flush();
            return $this->redirectToRoute('addquestions', array('formid' => $formid));
        }
        return $this->render(':Supervisor:content_add.html.twig', array('form' => $form->createView()));
    }

    //In this method a supervisor can add questions for his training session

    /**
     * @Route("/questions/{formid}/add", name="addquestions",defaults={"formid" = -1})
     */
    public function addquestionsAction(Request $request, $formid)
    {
        $questions = new Questions();
        $form = $this->createForm("AppBundle\Form\QuestionsType", $questions);
        $form->handleRequest($request);
        if ($form->isSubmitted()) {
            $em = $this->getDoctrine()->getManager();
            $questions->setformid($em->getRepository('AppBundle:Formation')->findOneBy(array('formId' => $formid)));
            $em->persist($questions);
            $em->flush();
            $num = count($em->getRepository('AppBundle:Questions')->findBy(array('formid' => $questions->getformid())));
            if ($num == 10) return $this->redirectToRoute('addevaluation', array('formid' => $formid));
            return $this->redirectToRoute('addcontent', array('formid' => $formid));
        }
        return $this->render(':Supervisor:questions_add.html.twig', array('form' => $form->createView()));
    }

        //in this method an admin adds a session

    public function addNewSessionAction(Request $request)
    {
        $session = new Session();
        $form = $this->createForm(SessionType::class, $session);

        $form->handleRequest($request);

        if ($form->isSubmitted()) {
            $em = $this->getDoctrine()->getManager();
            $em->persist($session);
            $em->flush();
            return $this->redirect($this->generateUrl('easyadmin') . '?entity=User');
        }
        return $this->render('serept/session/add_session.html.twig', array('form' => $form->createView()));
    }

    //in this method we can observe detailed information about the selected method

    public function FormationDetailsAction($id)
    {
        if ($id == -1) return $this->redirectToRoute('formsavailable');
        $em = $this->getDoctrine()->getManager();
        $formation = $em->getRepository('AppBundle:Formation')->findOneBy(array('formId' => $id));
        if ($formation == null) return $this->redirectToRoute('formsavailable');
        return $this->render(':Member:form_front.html.twig', array('formation' => $formation));
    }


    //in this method a supervisor picks an evaluation
    public function evaluatingAction(Request $request)
    {
        $em = $this->getDoctrine()->getManager();
        $myforms = [];
        if($this->isGranted("ROLE_SUPERVISOR")){
            $sessions = $em->getRepository("AppBundle:Session")->findBy(array("sessionmanager" => $this->getUser()));
            foreach ($sessions as $s){
                $mf = $em->getRepository("AppBundle:Formation")->findBy(array("sess" => $s));
                if(count($mf) > 0) array_push($myforms,$mf);
            }
        }
        $formation = $em->getRepository('AppBundle:Formation')->findAll();
        return $this->render(':Supervisor:evaluation_pick.html.twig', array('myforms' => $myforms, 'formation' => $formation));
    }

//In this method a supervisor can add an evaluation for his training session
    public function addevalAction(Request $request, $id)
    {
        $formid = $id;
        $evaluation = new Evaluation();
        $form = $this->createForm("AppBundle\Form\EvaluationType", $evaluation, array(
            'user' => $this->getUser()
        ));
        $form->handleRequest($request);
        if ($form->isSubmitted()) {
            $em = $this->getDoctrine()->getManager();
            $evaluation->setFormid($formid);
            $em->persist($evaluation);
            $em->flush();
            return $this->redirectToRoute('formsavailable'); // maybe future change
        }
        dump($formid);
        return $this->render(':Supervisor:evaluation_add.html.twig', array('form' => $form->createView()));
    }


    /**
     * @Route("/profile/edit", name="editPage")
     */
//    public function showeditPage(Request $request)
//    {
//        $about = new About();
//
//            $form = $this->createForm(AboutType::class, $about);
//            $form->handleRequest($request);
//            if($form->isSubmitted()){
//                $em = $this->getDoctrine()->getManager();
//                $em->persist($about);
//                $em->flush();
//                return $this->redirectToRoute('editPage');
//            }
//        return $this->render('@FOSUser/Profile/edit_content.html.twig',array('about' => $form->createView()));
//
//    }
}